import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Solution {
    static int res;
    static int n,k;
    static boolean visited[];
    static int arr[];
    public static void main(String[] args) throws IOException {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(in.readLine()," ");
        n = Integer.parseInt(st.nextToken());
        k = Integer.parseInt(st.nextToken());
        res = 0;
        visited = new boolean[n];
        arr = new int[n];
        st = new StringTokenizer(in.readLine()," ");

        for(int i=0;i<n;i++){
          arr[i] = Integer.parseInt(st.nextToken());
        }

        permutation(500,0);
        System.out.println(res);
    }
    private static void permutation(int sum, int idx) {
        if (idx == n) {
            res++;
            return;
        }
        for (int i = 0; i < n; i++) {
            if (!visited[i]&&(sum+arr[i]-k)>=500) {
                visited[i] = true;
                permutation(sum+arr[i]-k,idx+1);
                visited[i] = false;
            }
        }
    }
}
